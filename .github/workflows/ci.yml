name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=4096"

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Check environment template
        run: |
          if [ ! -f ".env.example" ]; then
            echo "❌ .env.example missing"
            exit 1
          fi
          echo "✅ .env.example exists"

      - name: Generate Prisma client
        run: npm run prisma:generate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/test

      - name: Validate Prisma schema
        run: npx prisma validate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/test

      - name: Lint
        run: npm run lint

      - name: Validate POS schemas
        run: npm run validate:schema

      - name: Build
        run: npm run build

      - name: Run tests with coverage
        run: npm run test:cov -- --ci
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          DIRECT_URL: postgresql://postgres:postgres@localhost:5432/test
          JWT_SECRET: test-secret-for-ci-minimum-32-characters-long
          JWT_REFRESH_SECRET: test-refresh-secret-for-ci-minimum-32-characters
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          NODE_ENV: test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella